<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>react native on Meijin's Tech Tips</title><link>https://tech-memo.meijin.dev/tags/react-native/</link><description>Recent content in react native on Meijin's Tech Tips</description><image><url>https://tech-memo.meijin.dev/site-feature-image.png</url><link>https://tech-memo.meijin.dev/site-feature-image.png</link></image><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Thu, 16 Sep 2021 00:00:00 +0900</lastBuildDate><atom:link href="https://tech-memo.meijin.dev/tags/react-native/index.xml" rel="self" type="application/rss+xml"/><item><title>React Native Webviewでページ内のJavaScriptイベントをアプリ側でハンドリングする</title><link>https://tech-memo.meijin.dev/posts/rn-webview-javascript-handling/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0900</pubDate><guid>https://tech-memo.meijin.dev/posts/rn-webview-javascript-handling/</guid><description>こちらに書いてあるまんまなんだけど。
https://github.com/react-native-webview/react-native-webview/blob/master/docs/Guide.md#communicating-between-js-and-native
React Native側 onMessage={(event) =&amp;gt; { alert(event.nativeEvent.data); }} Webview側 // @ts-ignore window.ReactNativeWebView.postMessage({ status: &amp;#39;completed&amp;#39; }) windowにReactNativeWebViewというのが生えるのでそれを使って通信するとハンドリングできる。iframeみたい。</description></item><item><title>React NativeでWebviewを使った際にユーザーのアクションでリロードさせる</title><link>https://tech-memo.meijin.dev/posts/rn-webview-reload/</link><pubDate>Wed, 15 Sep 2021 12:03:00 +0900</pubDate><guid>https://tech-memo.meijin.dev/posts/rn-webview-reload/</guid><description>refを使って、onReloadといった任意のイベントハンドラでcurrent!.reload()させると手動でリロードが出来ます。 普通はpullToRefreshEnabledを使えば対応できると思いますが、こういう方法もあるということで。
import { View } from &amp;#34;../components/Themed&amp;#34;; import { WebView } from &amp;#34;react-native-webview&amp;#34;; import { Fab, Icon } from &amp;#34;native-base&amp;#34;; import { AntDesign } from &amp;#34;@expo/vector-icons&amp;#34;; export default function WebviewScreen() { const webview = useRef&amp;lt;WebView&amp;gt;(null) const onReload = () =&amp;gt; { webview.current!.reload() } return ( &amp;lt;View style={styles.container}&amp;gt; &amp;lt;WebView ref={webview} pullToRefreshEnabled={true} source={{ uri: &amp;#34;https://expo.dev&amp;#34;, }} /&amp;gt; &amp;lt;Fab right={30} bottom={60} icon={ &amp;lt;Icon color={&amp;#34;white&amp;#34;} as={&amp;lt;AntDesign name={&amp;#34;heart&amp;#34;}/&amp;gt;} /&amp;gt; } onTouchEnd={onReload} /&amp;gt; &amp;lt;/View&amp;gt; ); }</description></item></channel></rss>